# ----------------------------
# INTEREST TYPE DEFINITIONS
# ----------------------------

# Represents an individual user interest (e.g., Technology, Travel)
type Interest {
  id: UUID!
  name: String!                  # Display name of the interest
  slug: String!                  # URL-friendly unique identifier
  description: String            # Optional longer description
  iconUrl: String                # Optional icon image URL
  colorHex: String               # Hex code for color branding
  category: InterestCategory!    # Category grouping
  isPopular: Boolean!            # Marked as popular for discovery
  followersCount: Int!           # Number of users following this interest
  sortOrder: Int!                # Used for custom ordering in UI
  isActive: Boolean!             # Indicates if the interest is active
}

# Edge object for pagination (Relay-style)
type InterestEdge {
  node: Interest!
  cursor: String!
}

# Connection object for paginated list of interests
type InterestConnection {
  edges: [InterestEdge!]!        # The list of interest nodes
  pageInfo: PageInfo!            # Information about pagination
  totalCount: Int!               # Total number of interests available
}

# Relay-style pageInfo type for cursor-based pagination
type PageInfo {
  hasNextPage: Boolean!          # If there's another page available
  endCursor: String              # Cursor to fetch the next page
}

# ----------------------------
# ENUMS
# ----------------------------

# Enum grouping interests into high-level categories
enum InterestCategory {
  TECHNOLOGY
  TRAVEL
  SCIENCE
  HEALTH_FITNESS
  BUSINESS
  ARTS_CULTURE
  FOOD_DRINK
  SPORTS
  EDUCATION
  LIFESTYLE
  MUSIC
  GAMING
  FASHION
  PHOTOGRAPHY
}

# ----------------------------
# INPUT TYPES
# ----------------------------

# Input used for creating a new Interest
input CreateInterestInput {
  name: String!                  # Display name of the interest
  slug: String!                  # Unique slug for the interest
  description: String            # Optional detailed description
  iconUrl: String                # Optional icon URL
  colorHex: String               # Optional hex color code
  category: InterestCategory!    # Required category for classification
  sortOrder: Int                 # Optional custom sort order
}

# ----------------------------
# RESPONSE TYPES
# ----------------------------

# Response type returned after creating an interest
type CreateInterestResponse {
  success: Boolean!              # Indicates if creation was successful
  message: String!               # Message with success or failure info
}

# ----------------------------
# QUERY DEFINITIONS
# ----------------------------

type Query {
  # Fetch a paginated list of interests
  # - Can filter by category or popularity
  # - Supports search query and pagination via cursor
  interests(
    query: String,                       # Text-based search
    category: InterestCategory,          # Filter by interest category
    popular: Boolean,                    # Filter popular interests
    first: Int = 10,                     # Number of results to return
    after: String                        # Cursor to paginate after
  ): InterestConnection!
}

# ----------------------------
# MUTATION DEFINITIONS
# ----------------------------

extend type Mutation {
  # Create a new interest in the system
  createInterest(input: CreateInterestInput!): CreateInterestResponse!

  # Bulk create interests
  createInterests(inputs: [CreateInterestInput!]!): [CreateInterestResponse!]!
}
